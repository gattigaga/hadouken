{"version":3,"sources":["components/home/Board.js","components/home/CreateBoardButton.js","components/common/Button.js","components/home/ModalCreateBoard.js","store/actionCreators.js","store/actions.js","pages/Home.js","components/board-detail/Header.js","components/board-detail/Group.js","components/board-detail/Card.js","components/board-detail/CreateGroupButton.js","components/board-detail/CreateGroupForm.js","pages/BoardDetail.js","components/card-detail/Header.js","components/card-detail/Section.js","components/card-detail/Description.js","components/card-detail/Progress.js","components/card-detail/Check.js","components/card-detail/CreateCheckForm.js","components/card-detail/CheckList.js","pages/CardDetail.js","store/reducers.js","store/store.js","App.js","index.js"],"names":["Container","styled","div","Name","p","StyledLink","Link","Board","name","to","Button","button","CreateBoardButton","onClick","type","Content","color","chroma","brighten","hex","className","label","isDisabled","disabled","defaultProps","Input","input","Icon","FontAwesomeIcon","modalStyles","overlay","background","content","border","width","padding","margin","ModalCreateBoard","isOpen","onClickCreate","onClickClose","useState","boardName","setBoardName","refInput","useRef","style","onRequestClose","onAfterOpen","current","focus","contentLabel","ref","value","onChange","event","target","onKeyDown","keyCode","autoComplete","icon","faTimes","filter","data","allowedKeys","result","forEach","key","undefined","updateCard","id","payload","deleteCards","ids","updateCheck","deleteChecks","Wrapper","Title","h1","BoardList","CreatorName","Home","isCreateOpen","setIsCreateOpen","boards","useSelector","state","dispatch","useDispatch","Helmet","map","board","slug","uuid","toLowerCase","replace","timestamp","Date","now","createBoard","header","ButtonBack","ButtonDelete","Header","title","isEdit","onApplyTitle","onClickBack","onClickTitle","onClickDelete","newTitle","setNewTitle","useEffect","faChevronLeft","stopPropagation","onBlur","Footer","h2","FooterButton","Text","ApplyButton","NewCard","textarea","CloseButton","darken","List","index","children","isWillAdd","isWillUpdateName","onNameUpdated","onClickName","onClickAdd","onClickApplyAdd","onClickCancelAdd","newCard","setNewCard","newName","setNewName","refInputName","refInputNewCard","autosize","select","draggableId","provided","innerRef","draggableProps","dragHandleProps","droppableId","droppableProps","placeholder","setTimeout","faPlus","IconDescription","IconWrapper","IconCheckWrapper","isCompleted","CheckValue","Card","totalChecked","maxChecklist","hasDescription","hasChecklist","faList","faCheckSquare","Label","CreateGroupButton","size","CreateGroupForm","onClickApply","onClickCancel","setName","GroupWrapper","machine","Machine","initial","states","idle","on","CREATE_GROUP","UPDATE_BOARD_NAME","CREATE_CARD","UPDATE_GROUP_NAME","createGroup","IDLE","createCard","updateGroupName","updateBoardName","BoardDetail","useMachine","send","groupId","setGroupId","boardSlug","useParams","find","groups","group","boardId","sort","a","b","cards","checks","history","useHistory","isUpdateBoardName","matches","addNewCard","description","addNewGroup","goBack","groupIds","cardIds","card","includes","checkIds","check","cardId","onDragEnd","source","destination","isSameGroup","isSameIndex","moveCard","direction","currentCards","Group","removeGroup","cardName","currentChecks","isChecked","length","CardIcon","CloseIcon","NameWrapper","GroupName","DeleteButton","groupName","faIdCard","Section","Textarea","height","Row","isEmpty","Description","newValue","setNewValue","Value","Meter","progress","Progress","max","Checkbox","LabelWrapper","Check","isWillUpdateLabel","onClickCheck","onClickLabel","onClickApplyUpdate","onClickCancelUpdate","newLabel","setNewLabel","isHovered","setIsHovered","onMouseEnter","onMouseLeave","checked","CreateCheckForm","newCheck","setNewCheck","AddCheckButton","CheckList","items","isCreate","onClickCheckItem","onClickLabelItem","onClickApplyUpdateItem","onClickCancelUpdateItem","onClickDeleteItem","itemId","setItemId","item","UPDATE_CARD_NAME","UPDATE_CARD_DESCRIPTION","CREATE_CHECK","UPDATE_CHECK","updateCardName","updateCardDescription","createCheck","CardDetail","cardSlug","refInputDescription","refInputCheck","divide","Number","isNaN","toFixed","isUpdateCardName","isUpdateCardDescription","isCreateCheck","isSameCard","action","newIndex","oldIndex","sortedGroups","arrayMove","concat","afterDeletedGroups","boardIds","withIndex","newGroupId","isMoveToOtherGroup","byGroupId","oldGroupId","sourceCards","destinationCards","newSourceCards","newDestinationCards","slice","sortedCards","afterDeletedCards","sortedChecks","afterDeletedChecks","persistConfig","storage","rootReducer","combineReducers","reducers","persistedReducer","persistReducer","store","createStore","App","persistStore","basename","process","path","Modal","setAppElement","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3dc1b7ab.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  width: 180px;\n  height: 96px;\n  background: #3498db;\n  border-radius: 4px;\n  box-sizing: border-box;\n  padding: 12px;\n`;\n\nconst Name = styled.p`\n  font-family: \"Roboto\";\n  font-weight: bold;\n  font-size: 16px;\n  color: white;\n  margin: 0px;\n  line-height: 1.2em;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nconst Board = ({ name, to }) => (\n  <StyledLink to={to}>\n    <Container>\n      <Name>{name}</Name>\n    </Container>\n  </StyledLink>\n);\n\nBoard.propTypes = {\n  name: PropTypes.string,\n  to: PropTypes.string,\n};\n\nexport default Board;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  width: 180px;\n  height: 96px;\n  background: #ddd;\n  border: 0px;\n  border-radius: 4px;\n  box-sizing: border-box;\n  padding: 12px;\n  font-family: \"Roboto\";\n  font-size: 14px;\n  color: #999;\n`;\n\nconst CreateBoardButton = ({ onClick }) => (\n  <Button type=\"button\" onClick={onClick}>\n    Create New Board\n  </Button>\n);\n\nCreateBoardButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default CreateBoardButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport chroma from \"chroma-js\";\n\nconst Content = styled.button`\n  padding: 8px 12px;\n  border-radius: 4px;\n  background: ${({ color }) => color};\n  color: white;\n  border: 0px;\n  font-family: \"Roboto\";\n  font-size: 14px;\n  cursor: pointer;\n\n  &:hover {\n    background: ${({ color }) => chroma(color).brighten(0.3).hex()};\n  }\n\n  &:disabled {\n    background: #eee;\n    color: #aaa;\n  }\n`;\n\nconst Button = ({ className, label, color, onClick, isDisabled }) => (\n  <Content\n    className={className}\n    color={color}\n    onClick={onClick}\n    disabled={isDisabled}\n  >\n    {label}\n  </Content>\n);\n\nButton.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.any,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n  isDisabled: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  color: \"#2ecc71\",\n};\n\nexport default Button;\n","import React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\nimport chroma from \"chroma-js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Button from \"../common/Button\";\n\nconst Board = styled.div`\n  width: 320px;\n  height: 96px;\n  background: #3498db;\n  border-radius: 4px;\n  box-sizing: border-box;\n  padding: 12px;\n  margin: 16px 0px;\n  display: flex;\n  align-items: flex-start;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border-radius: 4px;\n  box-sizing: border-box;\n  border: 0px;\n  padding: 8px;\n  margin-right: 24px;\n  font-family: \"Roboto\";\n  font-weight: bold;\n  font-size: 16px;\n  color: white;\n  background: ${chroma(\"#3498db\").brighten(0.5).hex()};\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  color: white;\n  margin-right: 4px;\n  cursor: pointer;\n`;\n\nconst modalStyles = {\n  overlay: {\n    background: \"rgba(0, 0, 0, 0.7)\",\n  },\n  content: {\n    background: \"none\",\n    border: 0,\n    width: 320,\n    padding: 0,\n    margin: \"auto\",\n  },\n};\n\nconst ModalCreateBoard = ({ isOpen, onClickCreate, onClickClose }) => {\n  const [boardName, setBoardName] = useState(\"\");\n  const refInput = useRef(null);\n\n  return (\n    <Modal\n      style={modalStyles}\n      isOpen={isOpen}\n      onRequestClose={() => {\n        onClickClose();\n        setBoardName(\"\");\n      }}\n      onAfterOpen={() => refInput.current.focus()}\n      contentLabel=\"Modal Create Board\"\n    >\n      <Board>\n        <Input\n          ref={refInput}\n          type=\"text\"\n          name=\"board\"\n          value={boardName}\n          onChange={(event) => setBoardName(event.target.value)}\n          onKeyDown={(event) => {\n            const isEnterPressed = event.keyCode === 13;\n\n            if (isEnterPressed && boardName) {\n              onClickCreate(boardName);\n              setBoardName(\"\");\n            }\n          }}\n          autoComplete=\"off\"\n        />\n        <Icon\n          icon={faTimes}\n          onClick={() => {\n            onClickClose();\n            setBoardName(\"\");\n          }}\n        />\n      </Board>\n      <Button\n        label=\"Create Board\"\n        onClick={() => {\n          onClickCreate(boardName);\n          setBoardName(\"\");\n        }}\n        isDisabled={!boardName}\n      />\n    </Modal>\n  );\n};\n\nModalCreateBoard.propTypes = {\n  isOpen: PropTypes.bool,\n  onClickCreate: PropTypes.func,\n  onClickClose: PropTypes.func,\n};\n\nexport default ModalCreateBoard;\n","import uuid from \"uuid/v4\";\n\nimport {\n  CREATE_BOARD,\n  UPDATE_BOARD,\n  DELETE_BOARD,\n  CREATE_GROUP,\n  UPDATE_GROUP,\n  DELETE_GROUP,\n  DELETE_GROUPS,\n  CREATE_CARD,\n  UPDATE_CARD,\n  DELETE_CARD,\n  DELETE_CARDS,\n  CREATE_CHECK,\n  UPDATE_CHECK,\n  DELETE_CHECK,\n  DELETE_CHECKS,\n  MOVE_CARD,\n  MOVE_GROUP,\n  MOVE_CHECK,\n} from \"./actions\";\n\n/**\n * Prevent unallowed keys to appear in data.\n *\n * @param {Object} data Data\n * @param {String[]} allowedKeys Allowed keys\n * @return {Object} Filtered data\n */\nconst filter = (data, allowedKeys) => {\n  const result = {};\n\n  allowedKeys.forEach((key) => {\n    if (data[key] === undefined) return;\n\n    result[key] = data[key];\n  });\n\n  return result;\n};\n\n/**\n * Create action for create board.\n *\n * @param {Object} data Data\n * @param {String} data.name Board name\n * @return {Object} Action\n */\nexport const createBoard = ({ name }) => {\n  const id = uuid();\n  const slug = name.toLowerCase().replace(\" \", \"-\") + `-${id}`;\n  const timestamp = Date.now();\n\n  return {\n    type: CREATE_BOARD,\n    payload: {\n      id,\n      slug,\n      name,\n      timestamp,\n    },\n  };\n};\n\n/**\n * Create action for update board.\n *\n * @param {String} id Board ID\n * @param {Object} data Data\n * @param {String} data.name New board name\n * @return {Object} Action\n */\nexport const updateBoard = (id, data) => {\n  const filteredData = filter(data, [\"name\"]);\n\n  return {\n    type: UPDATE_BOARD,\n    payload: {\n      id,\n      data: filteredData,\n    },\n  };\n};\n\n/**\n * Create action for delete board.\n *\n * @param {String} id Board ID\n * @return {Object} Action\n */\nexport const deleteBoard = (id) => ({\n  type: DELETE_BOARD,\n  payload: id,\n});\n\n/**\n * Create action for create group.\n *\n * @param {Object} data Data\n * @param {String} data.boardId Board ID\n * @param {String} data.name Group name\n * @return {Object} Action\n */\nexport const createGroup = ({ boardId, name }) => {\n  const id = uuid();\n  const timestamp = Date.now();\n\n  return {\n    type: CREATE_GROUP,\n    payload: {\n      id,\n      boardId,\n      name,\n      timestamp,\n    },\n  };\n};\n\n/**\n * Create action for update group.\n *\n * @param {String} id Group ID\n * @param {Object} data Data\n * @param {String} data.name New group name\n * @return {Object} Action\n */\nexport const updateGroup = (id, data) => {\n  const filteredData = filter(data, [\"name\"]);\n\n  return {\n    type: UPDATE_GROUP,\n    payload: {\n      id,\n      data: filteredData,\n    },\n  };\n};\n\n/**\n * Create action for move group.\n *\n * @param {String} id Group ID\n * @param {Object} data Data\n * @param {String} data.index New group index\n * @return {Object} Action\n */\nexport const moveGroup = (id, { index }) => ({\n  type: MOVE_GROUP,\n  payload: {\n    id,\n    data: {\n      index,\n    },\n  },\n});\n\n/**\n * Create action for delete group.\n *\n * @param {String} id Group ID\n * @return {Object} Action\n */\nexport const deleteGroup = (id) => ({\n  type: DELETE_GROUP,\n  payload: id,\n});\n\n/**\n * Create action for delete groups.\n *\n * @param {String[]} ids Group IDs\n * @return {Object} Action\n */\nexport const deleteGroups = (ids) => ({\n  type: DELETE_GROUPS,\n  payload: ids,\n});\n\n/**\n * Create action for create card.\n *\n * @param {Object} data Data\n * @param {String} data.groupId Group ID\n * @param {String} data.name Card name\n * @return {Object} Action\n */\nexport const createCard = ({ groupId, name }) => {\n  const id = uuid();\n  const slug = name.toLowerCase().replace(\" \", \"-\") + `-${id}`;\n  const timestamp = Date.now();\n  const description = \"\";\n\n  return {\n    type: CREATE_CARD,\n    payload: {\n      id,\n      groupId,\n      slug,\n      name,\n      description,\n      timestamp,\n    },\n  };\n};\n\n/**\n * Create action for update card.\n *\n * @param {String} id Card ID\n * @param {Object} data Data\n * @param {String} data.name New card name\n * @param {String} data.description New card description\n * @return {Object} Action\n */\nexport const updateCard = (id, data) => {\n  const filteredData = filter(data, [\"name\", \"description\"]);\n\n  return {\n    type: UPDATE_CARD,\n    payload: {\n      id,\n      data: filteredData,\n    },\n  };\n};\n\n/**\n * Create action for move card.\n *\n * @param {String} id Card ID\n * @param {Object} data Data\n * @param {String} data.groupId New group ID\n * @param {String} data.index New card index\n * @return {Object} Action\n */\nexport const moveCard = (id, { groupId, index }) => ({\n  type: MOVE_CARD,\n  payload: {\n    id,\n    data: {\n      groupId,\n      index,\n    },\n  },\n});\n\n/**\n * Create action for delete card.\n *\n * @param {String} id Card ID\n * @return {Object} Action\n */\nexport const deleteCard = (id) => ({\n  type: DELETE_CARD,\n  payload: id,\n});\n\n/**\n * Create action for delete cards.\n *\n * @param {String[]} ids Card IDs\n * @return {Object} Action\n */\nexport const deleteCards = (ids) => ({\n  type: DELETE_CARDS,\n  payload: ids,\n});\n\n/**\n * Create action for create check.\n *\n * @param {Object} data Data\n * @param {String} data.cardId Card ID\n * @param {String} data.label Check label\n * @return {Object} Action\n */\nexport const createCheck = ({ cardId, label }) => {\n  const id = uuid();\n  const timestamp = Date.now();\n  const isChecked = false;\n\n  return {\n    type: CREATE_CHECK,\n    payload: {\n      id,\n      cardId,\n      label,\n      isChecked,\n      timestamp,\n    },\n  };\n};\n\n/**\n * Create action for update check.\n *\n * @param {String} id Check ID\n * @param {Object} data Data\n * @param {String} data.label New check label\n * @param {String} data.isChecked Is this checked or not ?\n * @return {Object} Action\n */\nexport const updateCheck = (id, data) => {\n  const filteredData = filter(data, [\"label\", \"isChecked\"]);\n\n  return {\n    type: UPDATE_CHECK,\n    payload: {\n      id,\n      data: filteredData,\n    },\n  };\n};\n\n/**\n * Create action for move check.\n *\n * @param {String} id Check ID\n * @param {Object} data Data\n * @param {String} data.index New check index\n * @return {Object} Action\n */\nexport const moveCheck = (id, { index }) => ({\n  type: MOVE_CHECK,\n  payload: {\n    id,\n    data: {\n      index,\n    },\n  },\n});\n\n/**\n * Create action for delete check.\n *\n * @param {String} id Check ID\n * @return {Object} Action\n */\nexport const deleteCheck = (id) => ({\n  type: DELETE_CHECK,\n  payload: id,\n});\n\n/**\n * Create action for delete checks.\n *\n * @param {String[]} ids Check IDs\n * @return {Object} Action\n */\nexport const deleteChecks = (ids) => ({\n  type: DELETE_CHECKS,\n  payload: ids,\n});\n","// Boards\nexport const CREATE_BOARD = \"CREATE_BOARD\";\nexport const UPDATE_BOARD = \"UPDATE_BOARD\";\nexport const DELETE_BOARD = \"DELETE_BOARD\";\n\n// Groups\nexport const CREATE_GROUP = \"CREATE_GROUP\";\nexport const UPDATE_GROUP = \"UPDATE_GROUP\";\nexport const MOVE_GROUP = \"MOVE_GROUP\";\nexport const DELETE_GROUP = \"DELETE_GROUP\";\nexport const DELETE_GROUPS = \"DELETE_GROUPS\";\n\n// Cards\nexport const CREATE_CARD = \"CREATE_CARD\";\nexport const UPDATE_CARD = \"UPDATE_CARD\";\nexport const MOVE_CARD = \"MOVE_CARD\";\nexport const DELETE_CARD = \"DELETE_CARD\";\nexport const DELETE_CARDS = \"DELETE_CARDS\";\n\n// Checks\nexport const CREATE_CHECK = \"CREATE_CHECK\";\nexport const UPDATE_CHECK = \"UPDATE_CHECK\";\nexport const MOVE_CHECK = \"MOVE_CHECK\";\nexport const DELETE_CHECK = \"DELETE_CHECK\";\nexport const DELETE_CHECKS = \"DELETE_CHECKS\";\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Board from \"../components/home/Board\";\nimport CreateBoardButton from \"../components/home/CreateBoardButton\";\nimport ModalCreateBoard from \"../components/home/ModalCreateBoard\";\nimport { createBoard } from \"../store/actionCreators\";\n\nconst Container = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  box-sizing: border-box;\n`;\n\nconst Wrapper = styled.div`\n  width: 800px;\n  margin: auto;\n  padding-top: 48px;\n  padding-bottom: 96px;\n`;\n\nconst Title = styled.h1`\n  font-family: \"Roboto\";\n  font-size: 64px;\n  letter-spacing: -3px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  color: #333;\n`;\n\nconst BoardList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 180px);\n  grid-gap: 26px;\n`;\n\nconst CreatorName = styled.p`\n  font-family: \"Roboto\";\n  font-size: 14px;\n  color: #aaa;\n  margin-top: 0px;\n  margin-bottom: 48px;\n`;\n\nconst Home = () => {\n  const [isCreateOpen, setIsCreateOpen] = useState(false);\n  const boards = useSelector((state) => state.boards);\n  const dispatch = useDispatch();\n\n  const addNewBoard = (name) => {\n    dispatch(createBoard({ name }));\n    setIsCreateOpen(false);\n  };\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Hadouken</title>\n      </Helmet>\n      <Wrapper>\n        <Title>Hadouken</Title>\n        <CreatorName>Created by Gattigaga Hayyuta Dewa</CreatorName>\n        <BoardList>\n          {boards.map((board) => (\n            <Board key={board.id} name={board.name} to={board.slug} />\n          ))}\n          <CreateBoardButton onClick={() => setIsCreateOpen(true)} />\n        </BoardList>\n      </Wrapper>\n      <ModalCreateBoard\n        onClickClose={() => setIsCreateOpen(false)}\n        onClickCreate={addNewBoard}\n        isOpen={isCreateOpen}\n      />\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Button from \"../common/Button\";\n\nconst Container = styled.header`\n  display: flex;\n  margin-bottom: 24px;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-family: \"Roboto\";\n  font-size: 24px;\n  letter-spacing: -1px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  color: white;\n`;\n\nconst ButtonBack = styled(Button)`\n  margin-right: 8px;\n`;\n\nconst ButtonDelete = styled(Button)`\n  margin-right: 18px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  font-size: 16px;\n  color: white;\n`;\n\nconst Input = styled.input`\n  width: 320px;\n  height: 32px;\n  font-family: \"Roboto\";\n  font-size: 24px;\n  font-weight: bold;\n  letter-spacing: -1px;\n  outline: none;\n  padding: 0px;\n  box-sizing: border-box;\n  border-radius: 4px;\n  border: 0px;\n  background: none;\n  color: white;\n`;\n\nconst Header = ({\n  refInput,\n  title,\n  isEdit,\n  onApplyTitle,\n  onClickBack,\n  onClickTitle,\n  onClickDelete,\n}) => {\n  const [newTitle, setNewTitle] = useState(\"\");\n\n  useEffect(() => {\n    setNewTitle(title);\n  }, [title]);\n\n  return (\n    <Container>\n      <ButtonBack\n        label={<Icon icon={faChevronLeft} />}\n        color=\"#5cb5fa\"\n        onClick={(event) => {\n          event.stopPropagation();\n          onClickBack();\n        }}\n      />\n      <ButtonDelete\n        label={<Icon icon={faTimes} />}\n        color=\"#5cb5fa\"\n        onClick={(event) => {\n          event.stopPropagation();\n          onClickDelete();\n        }}\n      />\n      {isEdit ? (\n        <Input\n          ref={refInput}\n          type=\"text\"\n          value={newTitle}\n          onClick={(event) => event.stopPropagation()}\n          onChange={(event) => setNewTitle(event.target.value)}\n          onBlur={() => onApplyTitle(newTitle)}\n          onKeyDown={(event) => {\n            switch (event.keyCode) {\n              case 13: // Enter is pressed\n              case 27: // Escape is pressed\n                onApplyTitle(newTitle);\n                break;\n\n              default:\n                break;\n            }\n          }}\n        />\n      ) : (\n        <Title\n          onClick={(event) => {\n            event.stopPropagation();\n            onClickTitle();\n          }}\n        >\n          {title}\n        </Title>\n      )}\n    </Container>\n  );\n};\n\nHeader.propTypes = {\n  refInput: PropTypes.any,\n  title: PropTypes.string,\n  isEdit: PropTypes.bool,\n  onApplyTitle: PropTypes.func,\n  onClickBack: PropTypes.func,\n  onClickTitle: PropTypes.func,\n  onClickDelete: PropTypes.func,\n};\n\nexport default Header;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport chroma from \"chroma-js\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport autosize from \"autosize\";\n\nimport Button from \"../common/Button\";\n\nconst Container = styled.div`\n  width: 280px;\n  margin-right: 12px;\n  background: #eee;\n  border-radius: 4px;\n  flex-shrink: 0;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  height: 42px;\n  display: flex;\n  align-items: center;\n  padding: 0px 12px;\n  box-sizing: border-box;\n`;\n\nconst Footer = styled(Header)`\n  padding: 0px 8px;\n  height: 48px;\n`;\n\nconst Name = styled.h2`\n  font-size: 14px;\n  font-family: \"Roboto\";\n  color: #777;\n  margin-right: auto;\n  width: 100%;\n`;\n\nconst Content = styled.div`\n  padding: 0px 8px;\n  min-height: 16px;\n  max-height: 400px;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: #ddd;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: #ccc;\n  }\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  color: #999;\n  font-size: 14px;\n`;\n\nconst FooterButton = styled.button`\n  border: 0px;\n  border-radius: 4px;\n  padding: 0px 12px;\n  background: none;\n  width: 100%;\n  height: 28px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  &:hover {\n    background: #ddd;\n  }\n`;\n\nconst Text = styled.p`\n  font-size: 14px;\n  font-family: \"Roboto\";\n  color: #999;\n  margin: 0px;\n  margin-left: 8px;\n`;\n\nconst ApplyButton = styled(Button)`\n  margin-right: 8px;\n`;\n\nconst NewCard = styled.textarea`\n  width: 100%;\n  min-height: 72px;\n  border: 0px;\n  border-radius: 4px;\n  border-bottom: 1px solid #ccc;\n  padding: 12px 8px;\n  background: white;\n  box-sizing: border-box;\n  margin-bottom: 8px;\n  font-family: \"Roboto\";\n  font-size: 14px;\n  outline: none;\n  color: #777;\n  resize: none;\n  line-height: 1.2em;\n`;\n\nconst CloseButton = styled.button`\n  cursor: pointer;\n  border: 0px;\n  background: none;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  height: 28px;\n  font-family: \"Roboto\";\n  font-size: 14px;\n  outline: none;\n  padding: 0px 8px;\n  margin-right: 24px;\n  box-sizing: border-box;\n  border-radius: 4px;\n  border: 2px solid ${chroma(\"#3498db\").darken(0.6).hex()};\n`;\n\nconst List = ({\n  id,\n  index,\n  name,\n  children,\n  isWillAdd,\n  isWillUpdateName,\n  onNameUpdated,\n  onClickName,\n  onClickClose,\n  onClickAdd,\n  onClickApplyAdd,\n  onClickCancelAdd,\n}) => {\n  const [newCard, setNewCard] = useState(\"\");\n  const [newName, setNewName] = useState(name);\n  const refInputName = useRef(null);\n  const refInputNewCard = useRef(null);\n\n  useEffect(() => {\n    setNewCard(\"\");\n\n    if (isWillAdd) {\n      refInputNewCard.current.focus();\n      autosize(refInputNewCard.current);\n    }\n  }, [isWillAdd]);\n\n  useEffect(() => {\n    if (isWillUpdateName) {\n      refInputName.current.select();\n    }\n  }, [isWillUpdateName]);\n\n  useEffect(() => {\n    const isApplied = !isWillUpdateName && name !== newName;\n\n    if (!isApplied) return;\n\n    onNameUpdated(newName);\n\n    if (newName) return;\n\n    setNewName(name);\n  }, [isWillUpdateName, name, onNameUpdated, newName]);\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided) => (\n        <Container\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <Header>\n            {isWillUpdateName ? (\n              <Input\n                ref={refInputName}\n                type=\"text\"\n                value={newName}\n                onClick={(event) => event.stopPropagation()}\n                onChange={(event) => setNewName(event.target.value)}\n                onKeyDown={(event) => {\n                  switch (event.keyCode) {\n                    case 13: // Enter is pressed\n                    case 27: // Escape is pressed\n                      onNameUpdated(newName);\n                      break;\n\n                    default:\n                      break;\n                  }\n                }}\n              />\n            ) : (\n              <Name\n                onClick={(event) => {\n                  event.stopPropagation();\n                  onClickName();\n                }}\n              >\n                {name}\n              </Name>\n            )}\n            <CloseButton\n              type=\"button\"\n              onClick={(event) => {\n                event.stopPropagation();\n                onClickClose();\n              }}\n            >\n              <Icon icon={faTimes} />\n            </CloseButton>\n          </Header>\n          <Droppable droppableId={id} type=\"CARD\">\n            {(provided) => (\n              <Content ref={provided.innerRef} {...provided.droppableProps}>\n                {children}\n                {provided.placeholder}\n                {isWillAdd && (\n                  <NewCard\n                    ref={refInputNewCard}\n                    placeholder=\"Enter a name for this card...\"\n                    onClick={(event) => event.stopPropagation()}\n                    onChange={(event) => setNewCard(event.target.value)}\n                    onKeyDown={(event) => {\n                      switch (event.keyCode) {\n                        case 13: // Enter is pressed\n                          onClickApplyAdd(newCard);\n                          setTimeout(() => setNewCard(\"\"), 50);\n                          break;\n\n                        case 27: // Escape is pressed\n                          onClickCancelAdd();\n                          break;\n\n                        default:\n                          break;\n                      }\n                    }}\n                    value={newCard}\n                  />\n                )}\n              </Content>\n            )}\n          </Droppable>\n          <Footer>\n            {isWillAdd ? (\n              <>\n                <ApplyButton\n                  label=\"Apply\"\n                  onClick={(event) => {\n                    event.stopPropagation();\n                    onClickApplyAdd(newCard);\n                    setTimeout(() => setNewCard(\"\"), 50);\n                  }}\n                />\n                <Button\n                  label=\"Cancel\"\n                  color=\"#e74c3c\"\n                  onClick={(event) => {\n                    event.stopPropagation();\n                    onClickCancelAdd();\n                  }}\n                />\n              </>\n            ) : (\n              <FooterButton\n                type=\"button\"\n                onClick={(event) => {\n                  event.stopPropagation();\n                  onClickAdd();\n                }}\n              >\n                <Icon icon={faPlus} />\n                <Text>Add new card</Text>\n              </FooterButton>\n            )}\n          </Footer>\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n\nList.propTypes = {\n  id: PropTypes.string,\n  index: PropTypes.string,\n  name: PropTypes.string,\n  children: PropTypes.array,\n  isWillAdd: PropTypes.bool,\n  isWillUpdateName: PropTypes.bool,\n  onNameUpdated: PropTypes.func,\n  onClickName: PropTypes.func,\n  onClickClose: PropTypes.func,\n  onClickAdd: PropTypes.func,\n  onClickApplyAdd: PropTypes.func,\n  onClickCancelAdd: PropTypes.func,\n};\n\nexport default List;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faList, faCheckSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  width: 100%;\n  border-radius: 4px;\n  border-bottom: 1px solid #ccc;\n  padding: 12px 8px;\n  background: white;\n  box-sizing: border-box;\n  margin-bottom: 8px;\n\n  &:hover {\n    background: #f5f5f5;\n  }\n`;\n\nconst Text = styled.p`\n  font-family: \"Roboto\";\n  font-size: 14px;\n  color: #777;\n  margin: 0px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  font-size: 14px;\n`;\n\nconst IconDescription = styled(Icon)`\n  margin-right: 14px;\n`;\n\nconst IconWrapper = styled.div`\n  display: flex;\n  height: 28px;\n  align-items: center;\n  margin-top: 8px;\n  padding: 0px 4px;\n`;\n\nconst IconCheckWrapper = styled.div`\n  background: ${({ isCompleted }) => (isCompleted ? \"#2ecc71\" : \"none\")};\n  display: flex;\n  align-items: center;\n  padding: 6px;\n  margin-left: -4px;\n  border-radius: 4px;\n`;\n\nconst CheckValue = styled(Text)`\n  margin-left: 6px;\n  margin-bottom: -2px;\n  font-size: 12px;\n  color: ${({ color }) => color || \"#777\"};\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nconst Card = ({\n  id,\n  index,\n  name,\n  to,\n  totalChecked,\n  maxChecklist,\n  hasDescription,\n  hasChecklist,\n}) => {\n  const isCompleted = totalChecked === maxChecklist;\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided) => (\n        <StyledLink to={to}>\n          <Container\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <Text>{name}</Text>\n            {(hasDescription || hasChecklist) && (\n              <IconWrapper>\n                {hasDescription && (\n                  <IconDescription icon={faList} color=\"#777\" />\n                )}\n                {hasChecklist && (\n                  <IconCheckWrapper isCompleted={isCompleted}>\n                    <Icon\n                      icon={faCheckSquare}\n                      color={isCompleted ? \"white\" : \"#777\"}\n                    />\n                    <CheckValue color={isCompleted ? \"white\" : \"#777\"}>\n                      {totalChecked}/{maxChecklist}\n                    </CheckValue>\n                  </IconCheckWrapper>\n                )}\n              </IconWrapper>\n            )}\n          </Container>\n        </StyledLink>\n      )}\n    </Draggable>\n  );\n};\n\nCard.propTypes = {\n  id: PropTypes.string,\n  index: PropTypes.number,\n  name: PropTypes.string,\n  to: PropTypes.string,\n  totalChecked: PropTypes.number,\n  maxChecklist: PropTypes.number,\n  hasDescription: PropTypes.bool,\n  hasChecklist: PropTypes.bool,\n};\n\nexport default Card;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport chroma from \"chroma-js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Container = styled.button`\n  width: 280px;\n  height: 40px;\n  flex-shrink: 0;\n  color: white;\n  display: flex;\n  align-items: center;\n  border: 0px;\n  border-radius: 4px;\n  padding: 0px 16px;\n  cursor: pointer;\n  background: ${chroma(\"#3498db\").brighten(0.5).hex()};\n\n  &:hover {\n    background: ${chroma(\"#3498db\").brighten(0.6).hex()};\n  }\n`;\n\nconst Label = styled.p`\n  font-size: 14px;\n  font-family: \"Roboto\";\n  margin: 0px;\n  margin-left: 8px;\n`;\n\nconst CreateGroupButton = ({ onClick }) => (\n  <Container\n    onClick={(event) => {\n      event.stopPropagation();\n      onClick();\n    }}\n  >\n    <FontAwesomeIcon icon={faPlus} size={14} />\n    <Label>Add new group</Label>\n  </Container>\n);\n\nCreateGroupButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default CreateGroupButton;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport chroma from \"chroma-js\";\n\nimport Button from \"../common/Button\";\n\nconst Container = styled.div`\n  width: 280px;\n  flex-shrink: 0;\n  background: #eee;\n  border-radius: 4px;\n`;\n\nconst ApplyButton = styled(Button)`\n  margin-right: 8px;\n`;\n\nconst Header = styled.div`\n  padding: 8px;\n  padding-bottom: 0px;\n`;\n\nconst Footer = styled.div`\n  width: 100%;\n  height: 48px;\n  display: flex;\n  align-items: center;\n  padding: 0px 8px;\n  box-sizing: border-box;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  height: 36px;\n  font-family: \"Roboto\";\n  font-size: 14px;\n  outline: none;\n  padding: 0px 12px;\n  box-sizing: border-box;\n  border-radius: 4px;\n  border: 2px solid ${chroma(\"#3498db\").darken(0.6).hex()};\n`;\n\nconst CreateGroupForm = ({ onClickApply, onClickCancel }) => {\n  const [name, setName] = useState(\"\");\n  const refInput = useRef(null);\n\n  useEffect(() => {\n    setName(\"\");\n    refInput.current.focus();\n  }, []);\n\n  return (\n    <Container>\n      <Header>\n        <Input\n          ref={refInput}\n          type=\"text\"\n          placeholder=\"Enter group name...\"\n          value={name}\n          onClick={(event) => event.stopPropagation()}\n          onChange={(event) => setName(event.target.value)}\n          onKeyDown={(event) => {\n            switch (event.keyCode) {\n              case 13: // Enter is pressed\n                onClickApply(name);\n                break;\n\n              case 27: // Escape is pressed\n                onClickCancel();\n                break;\n\n              default:\n                break;\n            }\n          }}\n        />\n      </Header>\n      <Footer>\n        <ApplyButton\n          label=\"Apply\"\n          onClick={(event) => {\n            event.stopPropagation();\n            onClickApply(name);\n          }}\n        />\n        <Button\n          label=\"Cancel\"\n          color=\"#e74c3c\"\n          onClick={(event) => {\n            event.stopPropagation();\n            onClickCancel();\n          }}\n        />\n      </Footer>\n    </Container>\n  );\n};\n\nCreateGroupForm.propTypes = {\n  onClickApply: PropTypes.func,\n  onClickCancel: PropTypes.func,\n};\n\nexport default CreateGroupForm;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Machine } from \"xstate\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { useMachine } from \"@xstate/react\";\nimport chroma from \"chroma-js\";\n\nimport Header from \"../components/board-detail/Header\";\nimport Group from \"../components/board-detail/Group\";\nimport Card from \"../components/board-detail/Card\";\nimport CreateGroupButton from \"../components/board-detail/CreateGroupButton\";\nimport CreateGroupForm from \"../components/board-detail/CreateGroupForm\";\nimport {\n  updateBoard,\n  deleteBoard,\n  createGroup,\n  updateGroup,\n  deleteGroup,\n  moveGroup,\n  createCard,\n  moveCard,\n  deleteCards,\n  deleteChecks,\n  deleteGroups,\n} from \"../store/actionCreators\";\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  box-sizing: border-box;\n  background: #3498db;\n`;\n\nconst Wrapper = styled.div`\n  width: calc(100vw - 64px);\n  margin: auto;\n  padding-top: 48px;\n`;\n\nconst GroupWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  overflow-x: auto;\n  height: 80vh;\n\n  &::-webkit-scrollbar {\n    height: 10px;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 8px;\n    background: ${chroma(\"#3498db\").darken(0.3).hex()};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 8px;\n    background: ${chroma(\"#3498db\").brighten(0.5).hex()};\n  }\n`;\n\nconst machine = Machine({\n  id: \"boardDetail\",\n  initial: \"idle\",\n  states: {\n    idle: {\n      on: {\n        CREATE_GROUP: \"createGroup\",\n        UPDATE_BOARD_NAME: \"updateBoardName\",\n        CREATE_CARD: \"createCard\",\n        UPDATE_GROUP_NAME: \"updateGroupName\",\n      },\n    },\n    createGroup: {\n      on: {\n        IDLE: \"idle\",\n        UPDATE_BOARD_NAME: \"updateBoardName\",\n        CREATE_CARD: \"createCard\",\n        UPDATE_GROUP_NAME: \"updateGroupName\",\n      },\n    },\n    createCard: {\n      on: {\n        IDLE: \"idle\",\n        CREATE_GROUP: \"createGroup\",\n        UPDATE_BOARD_NAME: \"updateBoardName\",\n        CREATE_CARD: \"createCard\",\n        UPDATE_GROUP_NAME: \"updateGroupName\",\n      },\n    },\n    updateGroupName: {\n      on: {\n        IDLE: \"idle\",\n        CREATE_GROUP: \"createGroup\",\n        UPDATE_BOARD_NAME: \"updateBoardName\",\n        CREATE_CARD: \"createCard\",\n        UPDATE_GROUP_NAME: \"updateGroupName\",\n      },\n    },\n    updateBoardName: {\n      on: {\n        IDLE: \"idle\",\n        CREATE_GROUP: \"createGroup\",\n        CREATE_CARD: \"createCard\",\n        UPDATE_GROUP_NAME: \"updateGroupName\",\n      },\n    },\n  },\n});\n\nconst BoardDetail = () => {\n  const [current, send] = useMachine(machine);\n  const [groupId, setGroupId] = useState(null);\n  const { boardSlug } = useParams();\n\n  // Get current board\n  const board = useSelector((state) =>\n    state.boards.find((board) => board.slug === boardSlug)\n  );\n\n  // Get current board's groups\n  const groups = useSelector((state) =>\n    state.groups\n      .filter((group) => group.boardId === board.id)\n      .sort((a, b) => a.index - b.index)\n  );\n\n  const cards = useSelector((state) => state.cards);\n  const checks = useSelector((state) => state.checks);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const refInputName = useRef(null);\n\n  const isUpdateBoardName = current.matches(\"updateBoardName\");\n\n  const removeBoard = () => {\n    history.goBack();\n\n    setTimeout(() => {\n      const groupIds = groups.map((group) => group.id);\n\n      const cardIds = cards\n        .filter((card) => groupIds.includes(card.groupId))\n        .map((card) => card.id);\n\n      const checkIds = checks\n        .filter((check) => cardIds.includes(check.cardId))\n        .map((check) => check.id);\n\n      dispatch(deleteBoard(board.id));\n      dispatch(deleteGroups(groupIds));\n      dispatch(deleteCards(cardIds));\n      dispatch(deleteChecks(checkIds));\n    }, 50);\n  };\n\n  const removeGroup = (group) => {\n    const cardIds = cards\n      .filter((card) => card.groupId === group.id)\n      .map((card) => card.id);\n\n    const checkIds = checks\n      .filter((check) => cardIds.includes(check.cardId))\n      .map((check) => check.id);\n\n    dispatch(deleteGroup(group.id));\n    dispatch(deleteCards(cardIds));\n    dispatch(deleteChecks(checkIds));\n  };\n\n  const updateOrder = (result) => {\n    const { type, source, destination, draggableId } = result;\n\n    if (!destination) return;\n\n    const isSameGroup = destination.droppableId === source.droppableId;\n    const isSameIndex = destination.index === source.index;\n\n    if (isSameGroup && isSameIndex) return;\n\n    if (type === \"GROUP\") {\n      dispatch(\n        moveGroup(draggableId, {\n          index: destination.index,\n        })\n      );\n    } else {\n      dispatch(\n        moveCard(draggableId, {\n          groupId: isSameGroup ? undefined : destination.droppableId,\n          index: destination.index,\n        })\n      );\n    }\n  };\n\n  const updateBoardName = (name) => {\n    dispatch(updateBoard(board.id, { name }));\n    send(\"IDLE\");\n  };\n\n  const updateGroupName = (group, name) => {\n    if (!name) return;\n\n    dispatch(updateGroup(group.id, { name }));\n    send(\"IDLE\");\n  };\n\n  const addNewCard = (group, name) => {\n    if (!name) return;\n\n    dispatch(\n      createCard({\n        groupId: group.id,\n        name,\n      })\n    );\n  };\n\n  const addNewGroup = (name) => {\n    if (!name) return;\n\n    dispatch(\n      createGroup({\n        boardId: board.id,\n        name,\n      })\n    );\n\n    send(\"IDLE\");\n  };\n\n  useEffect(() => {\n    if (isUpdateBoardName) {\n      refInputName.current.select();\n    }\n  }, [isUpdateBoardName]);\n\n  if (!board) return null;\n\n  return (\n    <Container onClick={() => send(\"IDLE\")}>\n      <Helmet>\n        <title>Hadouken | {board.name}</title>\n      </Helmet>\n      <Wrapper>\n        <Header\n          refInput={refInputName}\n          title={board.name}\n          isEdit={current.matches(\"updateBoardName\")}\n          onApplyTitle={updateBoardName}\n          onClickBack={() => history.goBack()}\n          onClickTitle={() => send(\"UPDATE_BOARD_NAME\")}\n          onClickDelete={removeBoard}\n        />\n        <DragDropContext onDragEnd={updateOrder}>\n          <Droppable\n            droppableId=\"droppable-root\"\n            direction=\"horizontal\"\n            type=\"GROUP\"\n          >\n            {(provided) => (\n              <GroupWrapper\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {groups.map((group) => {\n                  const currentCards = cards\n                    .filter((card) => card.groupId === group.id)\n                    .sort((a, b) => a.index - b.index);\n\n                  return (\n                    <Group\n                      key={group.id}\n                      id={group.id}\n                      index={group.index}\n                      name={group.name}\n                      onNameUpdated={(newName) => {\n                        updateGroupName(group, newName);\n                      }}\n                      onClickName={() => {\n                        send(\"UPDATE_GROUP_NAME\");\n                        setGroupId(group.id);\n                      }}\n                      onClickClose={() => removeGroup(group)}\n                      onClickAdd={() => {\n                        send(\"CREATE_CARD\");\n                        setGroupId(group.id);\n                      }}\n                      onClickApplyAdd={(cardName) => {\n                        addNewCard(group, cardName);\n                      }}\n                      onClickCancelAdd={() => send(\"IDLE\")}\n                      isWillAdd={\n                        current.matches(\"createCard\") && groupId === group.id\n                      }\n                      isWillUpdateName={\n                        current.matches(\"updateGroupName\") &&\n                        groupId === group.id\n                      }\n                    >\n                      {currentCards.map((card) => {\n                        const currentChecks = checks.filter(\n                          (check) => check.cardId === card.id\n                        );\n\n                        const totalChecked = currentChecks.filter(\n                          (check) => !!check.isChecked\n                        ).length;\n\n                        return (\n                          <Card\n                            key={card.id}\n                            id={card.id}\n                            index={card.index}\n                            name={card.name}\n                            to={`${board.slug}/${card.slug}`}\n                            totalChecked={totalChecked}\n                            maxChecklist={currentChecks.length}\n                            hasDescription={card.description}\n                            hasChecklist={!!currentChecks.length}\n                          />\n                        );\n                      })}\n                    </Group>\n                  );\n                })}\n                {provided.placeholder}\n                {current.matches(\"createGroup\") ? (\n                  <CreateGroupForm\n                    onClickApply={addNewGroup}\n                    onClickCancel={() => send(\"IDLE\")}\n                  />\n                ) : (\n                  <CreateGroupButton onClick={() => send(\"CREATE_GROUP\")} />\n                )}\n              </GroupWrapper>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default BoardDetail;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faIdCard } from \"@fortawesome/free-solid-svg-icons\";\nimport chroma from \"chroma-js\";\n\nconst Container = styled.div`\n  display: flex;\n  margin-bottom: 24px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  color: #777;\n  cursor: pointer;\n`;\n\nconst CardIcon = styled(Icon)`\n  margin-top: 4px;\n`;\n\nconst CloseIcon = styled(Icon)`\n  font-size: 24px;\n`;\n\nconst CloseButton = styled.button`\n  width: 32px;\n  height: 32px;\n  border: 0px;\n  margin-top: -4px;\n  margin-right: -4px;\n`;\n\nconst NameWrapper = styled.div`\n  margin-left: 16px;\n  margin-right: 32px;\n  width: 100%;\n`;\n\nconst Name = styled.h1`\n  font-size: 24px;\n  font-family: \"Roboto\";\n  color: #777;\n  margin: 0px;\n`;\n\nconst GroupName = styled.p`\n  font-size: 14px;\n  font-family: \"Roboto\";\n  color: #777;\n  margin: 0px;\n  margin-top: 8px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  height: 42px;\n  font-family: \"Roboto\";\n  font-size: 24px;\n  outline: none;\n  padding: 0px 8px;\n  margin-right: 24px;\n  box-sizing: border-box;\n  border-radius: 4px;\n  border: 2px solid ${chroma(\"#3498db\").darken(0.6).hex()};\n`;\n\nconst DeleteButton = styled.button`\n  font-size: 12px;\n  text-decoration: underline;\n  cursor: pointer;\n  background: none;\n  border: 0px;\n`;\n\nconst Header = ({\n  refInput,\n  title,\n  groupName,\n  isEdit,\n  onApplyTitle,\n  onClickTitle,\n  onClickClose,\n  onClickDelete,\n}) => {\n  const [newTitle, setNewTitle] = useState(\"\");\n\n  useEffect(() => {\n    setNewTitle(title);\n  }, [title]);\n\n  return (\n    <Container>\n      <CardIcon icon={faIdCard} />\n      <NameWrapper>\n        {isEdit ? (\n          <Input\n            ref={refInput}\n            type=\"text\"\n            value={newTitle}\n            onClick={(event) => event.stopPropagation()}\n            onChange={(event) => setNewTitle(event.target.value)}\n            onBlur={() => onApplyTitle(newTitle)}\n            onKeyDown={(event) => {\n              switch (event.keyCode) {\n                case 13: // Enter is pressed\n                case 27: // Escape is pressed\n                  onApplyTitle(newTitle);\n                  break;\n\n                default:\n                  break;\n              }\n            }}\n          />\n        ) : (\n          <Name\n            onClick={(event) => {\n              event.stopPropagation();\n              onClickTitle();\n            }}\n          >\n            {title}\n          </Name>\n        )}\n        <GroupName>\n          in group <strong>{groupName}</strong>{\" \"}\n          <DeleteButton\n            onClick={(event) => {\n              event.stopPropagation();\n              onClickDelete();\n            }}\n          >\n            (Delete)\n          </DeleteButton>\n        </GroupName>\n      </NameWrapper>\n      <CloseButton onClick={onClickClose}>\n        <CloseIcon icon={faTimes} />\n      </CloseButton>\n    </Container>\n  );\n};\n\nHeader.propTypes = {\n  refInput: PropTypes.any,\n  title: PropTypes.string,\n  groupName: PropTypes.string,\n  isEdit: PropTypes.bool,\n  onApplyTitle: PropTypes.func,\n  onClickTitle: PropTypes.func,\n  onClickClose: PropTypes.func,\n  onClickDelete: PropTypes.func,\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Container = styled.div`\n  margin-top: 36px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 12px;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  color: #777;\n  cursor: pointer;\n`;\n\nconst Title = styled.h2`\n  font-size: 18px;\n  font-family: \"Roboto\";\n  color: #777;\n  margin: 0px;\n  margin-left: 16px;\n`;\n\nconst Section = ({ icon, title, children }) => (\n  <Container>\n    <Header>\n      <Icon icon={icon} />\n      <Title>{title}</Title>\n    </Header>\n    {children}\n  </Container>\n);\n\nSection.propTypes = {\n  icon: PropTypes.any,\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport chroma from \"chroma-js\";\nimport { faList } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Button from \"../common/Button\";\nimport Section from \"./Section\";\n\nconst Wrapper = styled.div`\n  padding-left: 32px;\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  height: ${({ height }) => height || 96}px;\n  font-family: \"Roboto\";\n  font-size: 14px;\n  outline: none;\n  padding: 8px;\n  line-height: 1.5em;\n  margin-right: 24px;\n  margin-bottom: 8px;\n  box-sizing: border-box;\n  resize: none;\n  border-radius: 4px;\n  border: 2px solid ${chroma(\"#3498db\").darken(0.6).hex()};\n`;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ApplyButton = styled(Button)`\n  margin-right: 8px;\n`;\n\nconst Text = styled.p`\n  font-size: 14px;\n  font-family: \"Roboto\";\n  color: #777;\n  margin: 0px;\n  line-height: 1.5em;\n  cursor: pointer;\n\n  ${({ isEmpty }) =>\n    isEmpty &&\n    `\n    height: 54px;\n    background: #ddd;\n    border-radius: 4px;\n    padding: 12px;\n  `}\n`;\n\nconst Description = ({\n  refInput,\n  value,\n  isEdit,\n  onClick,\n  onClickCancel,\n  onClickApply,\n}) => {\n  const [newValue, setNewValue] = useState(\"\");\n\n  useEffect(() => {\n    setNewValue(value);\n  }, [value]);\n\n  return (\n    <Section icon={faList} title=\"Description\">\n      <Wrapper>\n        {isEdit ? (\n          <>\n            <Textarea\n              ref={refInput}\n              placeholder=\"Enter a description...\"\n              value={newValue}\n              onClick={(event) => event.stopPropagation()}\n              onChange={(event) => setNewValue(event.target.value)}\n              onKeyDown={(event) => {\n                const isEscapePressed = event.keyCode === 27;\n\n                if (isEscapePressed) {\n                  setNewValue(value);\n                  onClickCancel();\n                }\n              }}\n            />\n            <Row>\n              <ApplyButton\n                label=\"Apply\"\n                onClick={(event) => {\n                  event.stopPropagation();\n                  onClickApply(newValue);\n                }}\n              />\n              <Button\n                label=\"Cancel\"\n                color=\"#e74c3c\"\n                onClick={(event) => {\n                  event.stopPropagation();\n                  setNewValue(value);\n                  onClickCancel();\n                }}\n              />\n            </Row>\n          </>\n        ) : (\n          <Text\n            onClick={(event) => {\n              event.stopPropagation();\n              onClick();\n            }}\n            isEmpty={!newValue}\n          >\n            {newValue || \"Enter a description...\"}\n          </Text>\n        )}\n      </Wrapper>\n    </Section>\n  );\n};\n\nDescription.propTypes = {\n  refInput: PropTypes.any,\n  value: PropTypes.string,\n  isEdit: PropTypes.bool,\n  onClick: PropTypes.func,\n  onClickCancel: PropTypes.func,\n  onClickApply: PropTypes.func,\n};\n\nexport default Description;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n\nconst Value = styled.p`\n  font-family: \"Roboto\";\n  font-size: 12px;\n  color: #777;\n  margin: 0px;\n  margin-right: 16px;\n`;\n\nconst Meter = styled.progress`\n  appearance: none;\n  width: 100%;\n  height: 8px;\n\n  &::-webkit-progress-bar {\n    background: #ddd;\n    border-radius: 8px;\n  }\n\n  &::-webkit-progress-value {\n    background: ${({ color }) => color};\n    border-radius: 8px;\n  }\n`;\n\nconst Progress = ({ value }) => (\n  <Container>\n    <Value>{value}%</Value>\n    <Meter\n      value={value}\n      max={100}\n      color={value >= 100 ? \"#2ecc71\" : \"#3498db\"}\n    />\n  </Container>\n);\n\nProgress.propTypes = {\n  value: PropTypes.number,\n};\n\nexport default Progress;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Button from \"../common/Button\";\n\nconst Container = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  padding: 8px;\n  padding-bottom: 12px;\n  border-radius: 4px;\n  display: flex;\n  background: #eee;\n\n  &:hover {\n    background: #e7e7e7;\n  }\n`;\n\nconst Label = styled.p`\n  font-family: \"Roboto\";\n  font-size: 14px;\n  color: #777;\n  margin: 0px;\n  line-height: 1.2em;\n  cursor: pointer;\n  width: 100%;\n  text-decoration: ${({ isChecked }) => (isChecked ? \"line-through\" : \"none\")};\n`;\n\nconst Checkbox = styled.input`\n  margin-right: 16px;\n  outline: none;\n  cursor: pointer;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-left: auto;\n  font-size: 14px;\n  color: #777;\n  cursor: pointer;\n`;\n\nconst LabelWrapper = styled.div`\n  flex: 1;\n  margin-right: 24px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ApplyButton = styled(Button)`\n  margin-right: 8px;\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  height: 54px;\n  font-family: \"Roboto\";\n  font-size: 14px;\n  outline: none;\n  padding: 8px;\n  margin-right: 24px;\n  margin-bottom: 8px;\n  box-sizing: border-box;\n  resize: none;\n  background: #e3e3e3;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n`;\n\nconst Check = ({\n  id,\n  index,\n  label,\n  isChecked,\n  isWillUpdateLabel,\n  onClickCheck,\n  onClickLabel,\n  onClickDelete,\n  onClickApplyUpdate,\n  onClickCancelUpdate,\n}) => {\n  const [newLabel, setNewLabel] = useState(label);\n  const [isHovered, setIsHovered] = useState(false);\n  const refInput = useRef(null);\n\n  useEffect(() => {\n    setNewLabel(label);\n  }, [isWillUpdateLabel, label]);\n\n  useEffect(() => {\n    if (isWillUpdateLabel) {\n      refInput.current.select();\n    }\n  }, [isWillUpdateLabel]);\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided) => (\n        <Container\n          ref={provided.innerRef}\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <Checkbox\n            type=\"checkbox\"\n            onChange={(event) => {\n              event.stopPropagation();\n              onClickCheck();\n            }}\n            checked={isChecked}\n          />\n          <LabelWrapper>\n            {isWillUpdateLabel ? (\n              <>\n                <Textarea\n                  ref={refInput}\n                  placeholder=\"Enter a label...\"\n                  value={newLabel}\n                  onClick={(event) => event.stopPropagation()}\n                  onChange={(event) => setNewLabel(event.target.value)}\n                  onKeyDown={(event) => {\n                    switch (event.keyCode) {\n                      case 13: // Enter is pressed\n                        onClickApplyUpdate(newLabel);\n                        break;\n\n                      case 27: // Escape is pressed\n                        setNewLabel(label);\n                        onClickCancelUpdate();\n                        break;\n\n                      default:\n                        break;\n                    }\n                  }}\n                />\n                <Row>\n                  <ApplyButton\n                    label=\"Apply\"\n                    onClick={(event) => {\n                      event.stopPropagation();\n                      onClickApplyUpdate(newLabel);\n                    }}\n                  />\n                  <Button\n                    label=\"Cancel\"\n                    color=\"#e74c3c\"\n                    onClick={(event) => {\n                      event.stopPropagation();\n                      setNewLabel(label);\n                      onClickCancelUpdate();\n                    }}\n                  />\n                </Row>\n              </>\n            ) : (\n              <Label\n                onClick={(event) => {\n                  event.stopPropagation();\n                  onClickLabel();\n                }}\n                isChecked={isChecked}\n              >\n                {label}\n              </Label>\n            )}\n          </LabelWrapper>\n          {isHovered && (\n            <Icon\n              icon={faTimes}\n              onClick={(event) => {\n                event.stopPropagation();\n                onClickDelete();\n              }}\n            />\n          )}\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n\nCheck.propTypes = {\n  id: PropTypes.string,\n  index: PropTypes.number,\n  label: PropTypes.string,\n  isChecked: PropTypes.bool,\n  isWillUpdateLabel: PropTypes.bool,\n  onClickCheck: PropTypes.func,\n  onClickLabel: PropTypes.func,\n  onClickDelete: PropTypes.func,\n  onClickApplyUpdate: PropTypes.func,\n  onClickCancelUpdate: PropTypes.func,\n};\n\nexport default Check;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport chroma from \"chroma-js\";\n\nimport Button from \"../common/Button\";\n\nconst Container = styled.div`\n  padding-left: 32px;\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  height: ${({ height }) => height || 96}px;\n  font-family: \"Roboto\";\n  font-size: 14px;\n  outline: none;\n  padding: 8px;\n  line-height: 1.5em;\n  margin-right: 24px;\n  margin-bottom: 8px;\n  box-sizing: border-box;\n  resize: none;\n  border-radius: 4px;\n  border: 2px solid ${chroma(\"#3498db\").darken(0.6).hex()};\n`;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ApplyButton = styled(Button)`\n  margin-right: 8px;\n`;\n\nconst CreateCheckForm = ({ refInput, onClickApply, onClickCancel }) => {\n  const [newCheck, setNewCheck] = useState(\"\");\n\n  return (\n    <Container>\n      <Textarea\n        ref={refInput}\n        height={48}\n        placeholder=\"Add an item\"\n        value={newCheck}\n        onClick={(event) => event.stopPropagation()}\n        onChange={(event) => setNewCheck(event.target.value)}\n        onKeyDown={(event) => {\n          switch (event.keyCode) {\n            case 13: // Enter is pressed\n              onClickApply(newCheck);\n              setNewCheck(\"\");\n              break;\n\n            case 27: // Escape is pressed\n              onClickCancel();\n              setNewCheck(\"\");\n              break;\n\n            default:\n              break;\n          }\n        }}\n      />\n      <Row>\n        <ApplyButton\n          label=\"Apply\"\n          onClick={(event) => {\n            event.stopPropagation();\n            onClickApply(newCheck);\n            setNewCheck(\"\");\n          }}\n        />\n        <Button\n          label=\"Cancel\"\n          color=\"#e74c3c\"\n          onClick={(event) => {\n            event.stopPropagation();\n            onClickCancel();\n            setNewCheck(\"\");\n          }}\n        />\n      </Row>\n    </Container>\n  );\n};\n\nCreateCheckForm.propTypes = {\n  refInput: PropTypes.any,\n  onClickApply: PropTypes.func,\n  onClickCancel: PropTypes.func,\n};\n\nexport default CreateCheckForm;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { faCheckSquare } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Button from \"../common/Button\";\nimport Section from \"./Section\";\nimport Progress from \"./Progress\";\nimport Check from \"./Check\";\nimport CreateCheckForm from \"./CreateCheckForm\";\n\nconst AddCheckButton = styled(Button)`\n  margin-top: 8px;\n  margin-left: 32px;\n`;\n\nconst CheckList = ({\n  refInput,\n  card,\n  items,\n  progress,\n  isCreate,\n  isEdit,\n  onDragEnd,\n  onClickAdd,\n  onClickCancelAdd,\n  onClickApplyAdd,\n  onClickCheckItem,\n  onClickLabelItem,\n  onClickApplyUpdateItem,\n  onClickCancelUpdateItem,\n  onClickDeleteItem,\n}) => {\n  const [itemId, setItemId] = useState(null);\n\n  return (\n    <Section icon={faCheckSquare} title=\"Checklist\">\n      <Progress value={progress} />\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId={card.id} direction=\"vertical\" type=\"CHECK\">\n          {(provided) => (\n            <div ref={provided.innerRef} {...provided.droppableProps}>\n              {items.map((item) => (\n                <Check\n                  key={item.id}\n                  id={item.id}\n                  index={item.index}\n                  label={item.label}\n                  isChecked={item.isChecked}\n                  onClickCheck={() => onClickCheckItem(item)}\n                  onClickLabel={() => {\n                    setItemId(item.id);\n                    onClickLabelItem(item);\n                  }}\n                  onClickApplyUpdate={(newLabel) => {\n                    onClickApplyUpdateItem(item, newLabel);\n                  }}\n                  onClickCancelUpdate={onClickCancelUpdateItem}\n                  onClickDelete={() => onClickDeleteItem(item)}\n                  isWillUpdateLabel={isEdit && itemId === item.id}\n                />\n              ))}\n              {provided.placeholder}\n              {isCreate ? (\n                <CreateCheckForm\n                  refInput={refInput}\n                  onClickApply={onClickApplyAdd}\n                  onClickCancel={onClickCancelAdd}\n                />\n              ) : (\n                <AddCheckButton\n                  label=\"Add an item\"\n                  color=\"#34495e\"\n                  onClick={(event) => {\n                    event.stopPropagation();\n                    onClickAdd();\n                  }}\n                />\n              )}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </Section>\n  );\n};\n\nCheckList.propTypes = {\n  refInput: PropTypes.any,\n  value: PropTypes.string,\n  isEdit: PropTypes.bool,\n  onClick: PropTypes.func,\n  onCancel: PropTypes.func,\n  onClickApply: PropTypes.any,\n};\n\nexport default CheckList;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Machine } from \"xstate\";\nimport { useMachine } from \"@xstate/react\";\n\nimport Header from \"../components/card-detail/Header\";\nimport Description from \"../components/card-detail/Description\";\nimport CheckList from \"../components/card-detail/CheckList\";\nimport {\n  updateCard,\n  createCheck,\n  updateCheck,\n  deleteCheck,\n  deleteChecks,\n  deleteCard,\n  moveCheck,\n} from \"../store/actionCreators\";\n\nconst Container = styled.div`\n  width: 640px;\n  min-height: 320px;\n  padding: 24px;\n  background: #eee;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n\nconst modalStyles = {\n  overlay: {\n    background: \"rgba(0, 0, 0, 0.7)\",\n  },\n  content: {\n    background: \"none\",\n    border: 0,\n    width: 640,\n    padding: 0,\n    margin: \"auto\",\n  },\n};\n\nconst machine = Machine({\n  id: \"cardDetail\",\n  initial: \"idle\",\n  states: {\n    idle: {\n      on: {\n        UPDATE_CARD_NAME: \"updateCardName\",\n        UPDATE_CARD_DESCRIPTION: \"updateCardDescription\",\n        CREATE_CHECK: \"createCheck\",\n        UPDATE_CHECK: \"updateCheck\",\n      },\n    },\n    updateCardName: {\n      on: {\n        IDLE: \"idle\",\n        UPDATE_CARD_DESCRIPTION: \"updateCardDescription\",\n        CREATE_CHECK: \"createCheck\",\n        UPDATE_CHECK: \"updateCheck\",\n      },\n    },\n    updateCardDescription: {\n      on: {\n        IDLE: \"idle\",\n        UPDATE_CARD_NAME: \"updateCardName\",\n        CREATE_CHECK: \"createCheck\",\n        UPDATE_CHECK: \"updateCheck\",\n      },\n    },\n    createCheck: {\n      on: {\n        IDLE: \"idle\",\n        UPDATE_CARD_NAME: \"updateCardName\",\n        UPDATE_CARD_DESCRIPTION: \"updateCardDescription\",\n        UPDATE_CHECK: \"updateCheck\",\n      },\n    },\n    updateCheck: {\n      on: {\n        IDLE: \"idle\",\n        UPDATE_CARD_NAME: \"updateCardName\",\n        UPDATE_CARD_DESCRIPTION: \"updateCardDescription\",\n        CREATE_CHECK: \"createCheck\",\n        UPDATE_CHECK: \"updateCheck\",\n      },\n    },\n  },\n});\n\nconst CardDetail = () => {\n  const [current, send] = useMachine(machine);\n  const { cardSlug } = useParams();\n\n  // Get current card\n  const card = useSelector((state) =>\n    state.cards.find((card) => card.slug === cardSlug)\n  );\n\n  // Get group that contains current card\n  const group = useSelector((state) =>\n    state.groups.find((group) => group.id === card.groupId)\n  );\n\n  // Get current card's checks\n  const checks = useSelector((state) =>\n    state.checks.filter((check) => check.cardId === card.id)\n  );\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const refInputName = useRef(null);\n  const refInputDescription = useRef(null);\n  const refInputCheck = useRef(null);\n\n  const totalChecked = checks.filter((check) => !!check.isChecked).length;\n  const divide = totalChecked / checks.length;\n  const progress = Number.isNaN(divide) ? 0 : (divide * 100).toFixed(0);\n  const isUpdateCardName = current.matches(\"updateCardName\");\n  const isUpdateCardDescription = current.matches(\"updateCardDescription\");\n  const isCreateCheck = current.matches(\"createCheck\");\n\n  useEffect(() => {\n    if (isUpdateCardName) {\n      refInputName.current.select();\n    }\n  }, [isUpdateCardName]);\n\n  useEffect(() => {\n    if (isUpdateCardDescription) {\n      refInputDescription.current.select();\n    }\n  }, [isUpdateCardDescription]);\n\n  useEffect(() => {\n    if (isCreateCheck) {\n      refInputCheck.current.focus();\n    }\n  }, [isCreateCheck]);\n\n  const updateCheckOrder = (result) => {\n    const { source, destination, draggableId } = result;\n\n    if (!destination) return;\n\n    const isSameCard = destination.droppableId === source.droppableId;\n    const isSameIndex = destination.index === source.index;\n\n    if (isSameCard && isSameIndex) return;\n\n    dispatch(\n      moveCheck(draggableId, {\n        index: destination.index,\n      })\n    );\n  };\n\n  const updateCardName = (name) => {\n    dispatch(updateCard(card.id, { name }));\n    send(\"IDLE\");\n  };\n\n  const updateCardDescription = (description) => {\n    dispatch(updateCard(card.id, { description }));\n    send(\"IDLE\");\n  };\n\n  const addNewCheck = (label) => {\n    dispatch(createCheck({ cardId: card.id, label }));\n  };\n\n  const toggleCheck = (item) => {\n    dispatch(\n      updateCheck(item.id, {\n        isChecked: !item.isChecked,\n      })\n    );\n  };\n\n  const updateCheckLabel = (item, label) => {\n    dispatch(updateCheck(item.id, { label }));\n    send(\"IDLE\");\n  };\n\n  const removeCheck = (item) => {\n    dispatch(deleteCheck(item.id));\n  };\n\n  const removeCard = () => {\n    history.goBack();\n\n    setTimeout(() => {\n      const checkIds = checks.map((check) => check.id);\n\n      dispatch(deleteChecks(checkIds));\n      dispatch(deleteCard(card.id));\n    }, 50);\n  };\n\n  if (!card || !group) return null;\n\n  return (\n    <Modal\n      style={modalStyles}\n      onRequestClose={() => {\n        send(\"IDLE\");\n\n        if (current.matches(\"idle\")) {\n          history.goBack();\n        }\n      }}\n      contentLabel=\"Card Detail\"\n      isOpen\n    >\n      <Container onClick={() => send(\"IDLE\")}>\n        <Header\n          refInput={refInputName}\n          title={card.name}\n          groupName={group.name}\n          isEdit={current.matches(\"updateCardName\")}\n          onApplyTitle={updateCardName}\n          onClickClose={() => {\n            send(\"IDLE\");\n            history.goBack();\n          }}\n          onClickTitle={() => send(\"UPDATE_CARD_NAME\")}\n          onClickDelete={removeCard}\n        />\n        <Description\n          refInput={refInputDescription}\n          value={card.description}\n          isEdit={current.matches(\"updateCardDescription\")}\n          onClick={() => send(\"UPDATE_CARD_DESCRIPTION\")}\n          onClickCancel={() => send(\"IDLE\")}\n          onClickApply={updateCardDescription}\n        />\n        <CheckList\n          refInput={refInputCheck}\n          card={card}\n          items={checks}\n          progress={progress}\n          isCreate={current.matches(\"createCheck\")}\n          isEdit={current.matches(\"updateCheck\")}\n          onDragEnd={updateCheckOrder}\n          onClickAdd={() => send(\"CREATE_CHECK\")}\n          onClickCancelAdd={() => send(\"IDLE\")}\n          onClickApplyAdd={addNewCheck}\n          onClickCheckItem={toggleCheck}\n          onClickLabelItem={() => send(\"UPDATE_CHECK\")}\n          onClickApplyUpdateItem={updateCheckLabel}\n          onClickCancelUpdateItem={() => send(\"IDLE\")}\n          onClickDeleteItem={removeCheck}\n        />\n      </Container>\n    </Modal>\n  );\n};\n\nexport default CardDetail;\n","import arrayMove from \"array-move\";\n\nimport {\n  CREATE_BOARD,\n  UPDATE_BOARD,\n  DELETE_BOARD,\n  CREATE_GROUP,\n  UPDATE_GROUP,\n  DELETE_GROUP,\n  CREATE_CARD,\n  UPDATE_CARD,\n  DELETE_CARD,\n  CREATE_CHECK,\n  UPDATE_CHECK,\n  DELETE_CHECK,\n  MOVE_CARD,\n  MOVE_GROUP,\n  MOVE_CHECK,\n  DELETE_GROUPS,\n  DELETE_CARDS,\n  DELETE_CHECKS,\n} from \"./actions\";\n\nexport const boards = (state = [], action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CREATE_BOARD:\n      return [...state, payload];\n\n    case UPDATE_BOARD:\n      return state.map((item) => {\n        if (item.id === payload.id) {\n          return { ...item, ...payload.data };\n        }\n\n        return item;\n      });\n\n    case DELETE_BOARD:\n      return state.filter((item) => item.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nexport const groups = (state = [], action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CREATE_GROUP:\n      const index = state.filter((item) => item.boardId === payload.boardId)\n        .length;\n\n      return [\n        ...state,\n        {\n          ...payload,\n          index,\n        },\n      ];\n\n    case UPDATE_GROUP:\n      return state.map((item) => {\n        if (item.id === payload.id) {\n          return { ...item, ...payload.data };\n        }\n\n        return item;\n      });\n\n    case MOVE_GROUP:\n      return (() => {\n        const group = state.find((item) => item.id === payload.id);\n        const newIndex = payload.data.index;\n        const oldIndex = group.index;\n\n        // Get current board's groups\n        const groups = state.filter((item) => item.boardId === group.boardId);\n\n        // Move the group from the group list and\n        // assign new index for the groups\n        const sortedGroups = arrayMove(groups, oldIndex, newIndex).map(\n          (group, index) => ({\n            ...group,\n            index,\n          })\n        );\n\n        const result = state\n          .filter((item) => item.boardId !== group.boardId)\n          .concat(sortedGroups);\n\n        return result;\n      })();\n\n    case DELETE_GROUP:\n      return (() => {\n        const afterDeletedGroups = state.filter((item) => item.id !== payload);\n        const group = state.find((item) => item.id === payload);\n\n        // Get current board's groups\n        // assign new index for the groups\n        // and sort it\n        const sortedGroups = afterDeletedGroups\n          .filter((item) => item.boardId === group.boardId)\n          .map((item, index) => ({ ...item, index }))\n          .sort((a, b) => a.index - b.index);\n\n        const result = afterDeletedGroups\n          .filter((item) => item.boardId !== group.boardId)\n          .concat(sortedGroups);\n\n        return result;\n      })();\n\n    case DELETE_GROUPS:\n      return (() => {\n        const afterDeletedGroups = state.filter(\n          (item) => !payload.includes(item.id)\n        );\n\n        const boardIds = state\n          .filter((item) => payload.includes(item.id))\n          .map((item) => item.boardId);\n\n        // Get current board's groups\n        // assign new index for the groups\n        // and sort it\n        const sortedGroups = afterDeletedGroups\n          .filter((item) => boardIds.includes(item.boardId))\n          .map((item, index) => ({ ...item, index }))\n          .sort((a, b) => a.index - b.index);\n\n        const result = afterDeletedGroups\n          .filter((item) => !boardIds.includes(item.boardId))\n          .concat(sortedGroups);\n\n        return result;\n      })();\n\n    default:\n      return state;\n  }\n};\n\nexport const cards = (state = [], action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CREATE_CARD:\n      const index = state.filter((item) => item.groupId === payload.groupId)\n        .length;\n\n      return [\n        ...state,\n        {\n          ...payload,\n          index,\n        },\n      ];\n\n    case UPDATE_CARD:\n      return state.map((item) => {\n        if (item.id === payload.id) {\n          return { ...item, ...payload.data };\n        }\n\n        return item;\n      });\n\n    case MOVE_CARD:\n      return (() => {\n        const withIndex = (card, index) => ({\n          ...card,\n          index,\n        });\n\n        const { groupId: newGroupId, index: newIndex } = payload.data;\n        const isMoveToOtherGroup = newGroupId !== undefined;\n        const card = state.find((item) => item.id === payload.id);\n\n        if (isMoveToOtherGroup) {\n          const byGroupId = (groupId) => (item) => item.groupId === groupId;\n\n          const oldGroupId = card.groupId;\n          // Get cards from the source group\n          const sourceCards = state.filter(byGroupId(oldGroupId));\n          // Get cards from the destination group\n          const destinationCards = state.filter(byGroupId(newGroupId));\n\n          // Remove moved card from the source group and\n          // assign new index for the cards\n          const newSourceCards = sourceCards\n            .filter((item) => item.id !== card.id)\n            .map(withIndex);\n\n          // Insert moved card to the destination group and\n          // assign new index for the cards\n          const newDestinationCards = [\n            ...destinationCards.slice(0, newIndex),\n            { ...card, groupId: newGroupId },\n            ...destinationCards.slice(newIndex),\n          ].map(withIndex);\n\n          const result = state\n            .filter((item) => {\n              return item.groupId !== oldGroupId && item.groupId !== newGroupId;\n            })\n            .concat([...newSourceCards, ...newDestinationCards]);\n\n          return result;\n        } else {\n          // Get current group's cards\n          const cards = state.filter((item) => item.groupId === card.groupId);\n          const oldIndex = card.index;\n\n          // Move the card from the card list and\n          // assign new index for the cards\n          const sortedCards = arrayMove(cards, oldIndex, newIndex).map(\n            withIndex\n          );\n\n          const result = state\n            .filter((item) => item.groupId !== card.groupId)\n            .concat(sortedCards);\n\n          return result;\n        }\n      })();\n\n    case DELETE_CARD:\n      return (() => {\n        const afterDeletedCards = state.filter((item) => item.id !== payload);\n        const card = state.find((item) => item.id === payload);\n\n        // Get current group's cards\n        // assign new index for the cards\n        // and sort it\n        const sortedCards = afterDeletedCards\n          .filter((item) => item.groupId === card.groupId)\n          .map((item, index) => ({ ...item, index }))\n          .sort((a, b) => a.index - b.index);\n\n        const result = afterDeletedCards\n          .filter((item) => item.groupId !== card.groupId)\n          .concat(sortedCards);\n\n        return result;\n      })();\n\n    case DELETE_CARDS:\n      return (() => {\n        const afterDeletedCards = state.filter(\n          (item) => !payload.includes(item.id)\n        );\n\n        const cards = state.find((item) => payload.includes(item.id));\n\n        // Get current group's cards\n        // assign new index for the cards\n        // and sort it\n        const sortedCards = afterDeletedCards\n          .filter((item) => cards.includes(item.groupId))\n          .map((item, index) => ({ ...item, index }))\n          .sort((a, b) => a.index - b.index);\n\n        const result = afterDeletedCards\n          .filter((item) => !cards.includes(item.groupId))\n          .concat(sortedCards);\n\n        return result;\n      })();\n\n    default:\n      return state;\n  }\n};\n\nexport const checks = (state = [], action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CREATE_CHECK:\n      const index = state.filter((item) => item.cardId === payload.cardId)\n        .length;\n\n      return [\n        ...state,\n        {\n          ...payload,\n          index,\n        },\n      ];\n\n    case UPDATE_CHECK:\n      return state.map((item) => {\n        if (item.id === payload.id) {\n          return { ...item, ...payload.data };\n        }\n\n        return item;\n      });\n\n    case MOVE_CHECK:\n      return (() => {\n        const check = state.find((item) => item.id === payload.id);\n        const newIndex = payload.data.index;\n        const oldIndex = check.index;\n\n        // Get current card's checks\n        const checks = state.filter((item) => item.cardId === check.cardId);\n\n        // Move the check from the check list and\n        // assign new index for the checks\n        const sortedChecks = arrayMove(checks, oldIndex, newIndex).map(\n          (check, index) => ({\n            ...check,\n            index,\n          })\n        );\n\n        const result = state\n          .filter((item) => item.cardId !== check.cardId)\n          .concat(sortedChecks);\n\n        return result;\n      })();\n\n    case DELETE_CHECK:\n      return (() => {\n        const afterDeletedChecks = state.filter((item) => item.id !== payload);\n        const check = state.find((item) => item.id === payload);\n\n        // Get current card's checks\n        // assign new index for the checks\n        // and sort it\n        const sortedChecks = afterDeletedChecks\n          .filter((item) => item.cardId === check.cardId)\n          .map((item, index) => ({ ...item, index }))\n          .sort((a, b) => a.index - b.index);\n\n        const result = afterDeletedChecks\n          .filter((item) => item.cardId !== check.cardId)\n          .concat(sortedChecks);\n\n        return result;\n      })();\n\n    case DELETE_CHECKS:\n      return (() => {\n        const afterDeletedChecks = state.filter(\n          (item) => !payload.includes(item.id)\n        );\n\n        const checks = state.find((item) => payload.includes(item.id));\n\n        // Get current card's checks\n        // assign new index for the checks\n        // and sort it\n        const sortedChecks = afterDeletedChecks\n          .filter((item) => checks.includes(item.cardId))\n          .map((item, index) => ({ ...item, index }))\n          .sort((a, b) => a.index - b.index);\n\n        const result = afterDeletedChecks\n          .filter((item) => !checks.includes(item.cardId))\n          .concat(sortedChecks);\n\n        return result;\n      })();\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport * as reducers from \"./reducers\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst rootReducer = combineReducers(reducers);\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(persistedReducer);\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport Home from \"./pages/Home\";\nimport BoardDetail from \"./pages/BoardDetail\";\nimport CardDetail from \"./pages/CardDetail\";\nimport { store } from \"./store/store\";\n\nconst App = () => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/:boardSlug\">\n          <BoardDetail />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n      <Route path=\"/:boardSlug/:cardSlug\">\n        <CardDetail />\n      </Route>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"react-modal\";\nimport \"typeface-roboto\";\nimport \"normalize.css\";\n\nimport App from \"./App\";\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}